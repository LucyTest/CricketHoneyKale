{"name":"Cricket  Honey Kale","tagline":"Nutritional Recipe Generator Final Project","body":"# Final Project Proposal: Lisa Hachmann, Logan Sweet, Lucy Wilcox (Section 2)\r\n\r\n\r\n\r\nThe Big Idea\r\nWe are creating a software which will generate recipes for most daily food types, with a focus on cooking not baking. We are exploring data management, computer generated information, and GUIs. Our minimum viable product is generating a passable salad recipe. Additional goals are creating really tasty recipes, beautiful UI/UX, giving the program increasing levels of freedom and having it still render good food, and the user might also be able to give feedback and possibly even learn from said feedback.\r\n\r\nLearning Goals\r\nAll three of us are interested in learning how to make and use GUIs. Lucy is interested in deciding how the computer will generate and decide the recipes, Lisa is interested in how it will use and manipulate the information from the database, and Logan wants to focus the most on creating the GUI. We want to get more familiar with classes, plan our code structure before we begin implementing, become more comfortable using Git, and have clean, reliable, readable, commented code.\r\n\r\nImplementation Plan\r\nWe will start with recipe data manipulation in order to move into recipe generation. We will chose a GUI library with the insight of others (professors, NINJAs). We will address our recipe as a dictionary or list of ingredients, and also perhaps with some sort of taste profile. Overall, the program would look at other recipes and see what foods appear together and then look at this online data to chose food combinations. \r\n\r\nProject schedule\r\nDeadlines:\r\nMarch 30: Create basic implementation plan for software, Have recipe database for testing\r\nApril 2: Design Review!\r\n\tDeliverable: If you have one ingredient, give 1-5 ingredients that go with it. Have final design plan for software execution. \r\nApril 6: Use generated list of recipes to make instructions\r\nApril 13: Code Review!\r\nApril 20: Continue to refine instructions\r\nApril 23: Mid-Project presentation, Think about GUI\r\nApril 27: Determine if a recipe is “good” or not\r\nMay 4: Finish project; practice final presentation\r\nMay 6: Final due date and project presentation\r\n\r\nCollaboration plan\r\nWe plan to have multiple pair programming techniques: rotating pair programming and experiment with triple programming (having a driver, navigator, and googler). We plan on having quick reflections with every deadline but also decide before every meeting what we will try to get done, and after every meeting decide what we should individually do before the next meeting. Logan and Lisa both prefer working in pairs, while Lucy is flexible and neutral, so the decisions on the pairing of work will happen based more on scheduling. We will also have multiple files (one for the GUI and one or more for dealing with our data) so people can focus on different parts and work at the same time. Floobits might also be used so we can work together on the code.\r\n \r\nRisks\r\nWe are at risk for making nasty recipes and having inaccurate instructions. The instructions will be a particularly large risk just because every recipe cooks differently and it’s hard to base the instructions of a new recipe off an old one. To avoid this, we will start with salads and smoothies, examples of foods with a standard instruction pattern. Getting a functional GUI will be more difficult than running our software through the terminal, but will make a huge difference in terms of professionalism and functionality. \r\n\r\nAdditional Course Content\r\nSupport on other GUI platforms besides PyGame would be useful to learn about in class. The rest of the project seems manageable with the course content we have already learned, although more understanding of classes and objects will of course help us. We  don’t really know what machine learning is, but it might be useful. \r\n\r\n\r\n\r\n# Framing Document: \r\nCricket Honey Kale: Lucy Wilcox, Lisa Hachmann, Logan Sweet \r\nDesign Review\r\n\r\n\r\nBackground and context: \r\nWe are making a program that generates recipes by using web mined data from recipes online. Our recipe will both have ingredients and instructions. We are focusing on cooking, not baking (no yeast, baking powder, or baking soda). We may only complete a simpler version of this which creates salad or smoothie recipes. Our audience should know something about food (which we really hope/assume they do) and that’s about it!\r\n\r\nKey questions:\r\nOur questions are as follows: \r\nHow should the recipe URLs and recipes be stored? \r\nWhat GUI is simple to implement and can fit our needs\r\nWhat logic should we use to use to generate recipes? \r\nlooking at what ingredients are often used together\r\ncreate flavor profiles and pull from those lists\r\nother? \r\n     4. Do you know of any libraries that would be useful to us?\r\n\r\nWe are most interested in hearing others’ ideas on how we could generate recipes. Since part of our goal in creating recipes is to create good recipes, we know that our ingredient selection algorithm will be essential. While we have a couple ideas as to how the logic of this part of our software will work, we would like some feedback as to whether or not people think our plan will be successful as well as hearing any other ideas for the logic of recipe selection.  \r\n\r\nAgenda for technical review session:\r\nWe are planning to use the collaborative ideation structure for our design review. We will pass out post it notes in the beginning of class and present questions while we explain the steps of our project and the questions we have about each step. At the end of the presentation we will have an ideation period for all of the questions said during the presentation. At the end of the ideation period, we will have the audience put the questions on the whiteboards and ask all of the solutions to be put under the allotted whiteboard space for that question. A discussion can be started if necessary to explain certain solutions where everyone can weigh in with pros and cons regarding each.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}